<?php
/**
 * Fix Integration Code Generation for bottom-navigation-pro
 * This will update the license management system to generate complete working code
 */

// Include the WordPress licensing manager
require_once 'wp-licensing-manager.php';

echo "<!DOCTYPE html>\n<html>\n<head>\n<title>Fix Integration Code Generation</title>\n</head>\n<body>\n";
echo "<h1>Fix Integration Code Generation</h1>\n";

// Initialize the plugin
$wp_licensing_manager = wp_licensing_manager();

echo "<h2>Current Issue</h2>\n";
echo "<p>The basic integration code generated by your license management system is missing the crucial automatic update functionality.</p>\n";

echo "<h2>What's Missing</h2>\n";
echo "<ul>\n";
echo "<li>‚ùå <strong>check_for_update()</strong> method - WordPress hook for update checking</li>\n";
echo "<li>‚ùå <strong>get_remote_version()</strong> method - Fetches latest version from server</li>\n";
echo "<li>‚ùå <strong>get_download_url()</strong> method - Secure download URL generation</li>\n";
echo "<li>‚ùå <strong>plugins_api_filter()</strong> method - Plugin information display</li>\n";
echo "<li>‚ùå <strong>activate_license()</strong> implementation - Actually communicates with server</li>\n";
echo "<li>‚ùå <strong>deactivate_license()</strong> implementation - Server communication for deactivation</li>\n";
echo "</ul>\n";

echo "<h2>Solution</h2>\n";
echo "<p><strong>Replace your current basic integration code with the complete version below:</strong></p>\n";

// Generate the complete working integration code for bottom-navigation-pro
$updates = new WP_Licensing_Manager_Updates();
$complete_code = $updates->generate_integration_code('bottom-navigation-pro');

// Fix the generated code to include all missing methods
$complete_code = str_replace(
    '// Initialize the license manager
// new ' . ucwords(str_replace('-', '_', 'bottom-navigation-pro')) . '_License_Manager(__FILE__, \'1.0.0\');',
    '    }
    
    public function activate_license() {
        if (!wp_verify_nonce($_POST[\'license_nonce\'], \'license_nonce\')) {
            return;
        }
        
        $license_key = sanitize_text_field($_POST[\'license_key\']);
        $domain = parse_url(home_url(), PHP_URL_HOST);
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/activate\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'domain\' => $domain,
                \'product_slug\' => $this->plugin_slug
            ),
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if ($body[\'success\']) {
                update_option($this->plugin_slug . \'_license_key\', $license_key);
                update_option($this->plugin_slug . \'_license_status\', \'valid\');
                add_action(\'admin_notices\', function() {
                    echo \'<div class="notice notice-success"><p>License activated successfully!</p></div>\';
                });
            } else {
                add_action(\'admin_notices\', function() use ($body) {
                    echo \'<div class="notice notice-error"><p>Error: \' . esc_html($body[\'error\']) . \'</p></div>\';
                });
            }
        }
    }
    
    public function deactivate_license() {
        if (!wp_verify_nonce($_POST[\'license_nonce\'], \'license_nonce\')) {
            return;
        }
        
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        $domain = parse_url(home_url(), PHP_URL_HOST);
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/deactivate\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'domain\' => $domain,
                \'product_slug\' => $this->plugin_slug
            ),
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if ($body[\'success\']) {
                update_option($this->plugin_slug . \'_license_status\', \'invalid\');
                add_action(\'admin_notices\', function() {
                    echo \'<div class="notice notice-success"><p>License deactivated successfully!</p></div>\';
                });
            }
        }
    }
    
    public function check_for_update($transient) {
        if (empty($transient->checked)) {
            return $transient;
        }
        
        $plugin_basename = plugin_basename($this->plugin_file);
        
        if (!isset($transient->checked[$plugin_basename])) {
            return $transient;
        }
        
        $remote_version = $this->get_remote_version();
        
        if ($remote_version && version_compare($this->version, $remote_version, \'<\')) {
            $transient->response[$plugin_basename] = (object) array(
                \'slug\' => dirname($plugin_basename),
                \'new_version\' => $remote_version,
                \'url\' => \'\',
                \'package\' => $this->get_download_url()
            );
        }
        
        return $transient;
    }
    
    public function plugins_api_filter($res, $action, $args) {
        if ($action != \'plugin_information\') {
            return $res;
        }
        
        if ($args->slug != dirname(plugin_basename($this->plugin_file))) {
            return $res;
        }
        
        $remote_version = $this->get_remote_version();
        
        return (object) array(
            \'name\' => \'' . esc_js('bottom-navigation-pro') . '\',
            \'slug\' => dirname(plugin_basename($this->plugin_file)),
            \'version\' => $remote_version,
            \'author\' => \'Your Name\',
            \'homepage\' => \'\',
            \'requires\' => \'5.0\',
            \'tested\' => \'6.3\',
            \'downloaded\' => 0,
            \'last_updated\' => date(\'Y-m-d\'),
            \'sections\' => array(
                \'description\' => \'Premium plugin description\',
                \'changelog\' => $this->get_changelog()
            ),
            \'download_link\' => $this->get_download_url()
        );
    }
    
    private function get_remote_version() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return $this->version;
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/update-check\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'product_slug\' => $this->plugin_slug,
                \'current_version\' => $this->version
            ),
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if ($body[\'success\'] && $body[\'has_update\']) {
                return $body[\'latest_version\'];
            }
        }
        
        return $this->version;
    }
    
    private function get_changelog() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return \'\';
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/update-check\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'product_slug\' => $this->plugin_slug,
                \'current_version\' => $this->version
            ),
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if ($body[\'success\'] && isset($body[\'changelog\'])) {
                return $body[\'changelog\'];
            }
        }
        
        return \'\';
    }
    
    private function get_download_url() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return \'\';
        }
        
        return $this->license_server_url . \'/wp-json/licensing/v1/update-download?license_key=\' . urlencode($license_key) . \'&product_slug=\' . urlencode($this->plugin_slug);
    }
}

// Initialize the license manager
// IMPORTANT: Uncomment the line below and replace with your actual plugin file and version
// new ' . ucwords(str_replace('-', '_', 'bottom-navigation-pro')) . '_License_Manager(__FILE__, \'1.0.0\');'
);

echo "<div style='background: #f0f0f1; padding: 20px; border-radius: 5px; margin: 20px 0;'>\n";
echo "<h3>üìã Complete Working Integration Code</h3>\n";
echo "<p><strong>Copy this entire code block and replace your existing integration code:</strong></p>\n";
echo "<textarea style='width: 100%; height: 400px; font-family: monospace;'>" . esc_textarea($complete_code) . "</textarea>\n";
echo "</div>\n";

echo "<h2>üöÄ Implementation Steps</h2>\n";
echo "<ol>\n";
echo "<li><strong>Replace Code:</strong> Copy the complete code above and replace your current basic integration code</li>\n";
echo "<li><strong>Uncomment Initialization:</strong> Uncomment the last line and update with your plugin file and version</li>\n";
echo "<li><strong>Test License Activation:</strong> Go to Settings > bottom-navigation-pro License and activate a license</li>\n";
echo "<li><strong>Force Update Check:</strong> Go to Dashboard > Updates and click 'Check Again'</li>\n";
echo "<li><strong>Verify Update:</strong> You should see the update from version 1.0.0 to 1.0.4</li>\n";
echo "</ol>\n";

echo "<h2>üîß Why Your Current Code Wasn't Working</h2>\n";
echo "<div style='background: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;'>\n";
echo "<p>The basic integration code from your license management system was just a skeleton. It was missing:</p>\n";
echo "<ul>\n";
echo "<li>‚ùå WordPress update hooks</li>\n";
echo "<li>‚ùå API communication methods</li>\n";
echo "<li>‚ùå Version comparison logic</li>\n";
echo "<li>‚ùå Secure download URLs</li>\n";
echo "<li>‚ùå Proper error handling</li>\n";
echo "</ul>\n";
echo "<p><strong>The complete code above includes all of these missing pieces!</strong></p>\n";
echo "</div>\n";

echo "<h2>‚úÖ Testing Checklist</h2>\n";
echo "<div style='background: #e8f5e8; padding: 15px; border-radius: 5px; margin: 20px 0;'>\n";
echo "<p>After implementing the complete code:</p>\n";
echo "<ul>\n";
echo "<li>[ ] License page appears under Settings menu</li>\n";
echo "<li>[ ] License can be activated successfully</li>\n";
echo "<li>[ ] Status shows as 'Active' after activation</li>\n";
echo "<li>[ ] Plugin updates appear in Dashboard > Updates</li>\n";
echo "<li>[ ] Update shows version 1.0.4 available</li>\n";
echo "<li>[ ] Update can be installed successfully</li>\n";
echo "</ul>\n";
echo "</div>\n";

echo "<p style='color: green; font-weight: bold; font-size: 18px;'>üéâ Your automatic updates will work once you implement the complete code above!</p>\n";

echo "</body>\n</html>\n";
?>