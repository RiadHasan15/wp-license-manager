<?php
/**
 * Updates handling class - FIXED VERSION
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class WP_Licensing_Manager_Updates {

    /**
     * Constructor
     */
    public function __construct() {
        // No hooks needed in constructor
    }

    /**
     * Get update information for a product
     *
     * @param string $product_slug
     * @param string $license_key
     * @param string $current_version
     * @return array
     */
    public function get_update_info($product_slug, $license_key, $current_version) {
        // Get product
        $product_manager = new WP_Licensing_Manager_Product_Manager();
        $product = $product_manager->get_product_by_slug($product_slug);
        
        if (!$product) {
            return array(
                'has_update' => false,
                'error' => 'Product not found'
            );
        }

        // Validate license
        $license_manager = new WP_Licensing_Manager_License_Manager();
        $validation = $license_manager->validate_license($license_key, $product->id);

        if (!$validation['valid']) {
            return array(
                'has_update' => false,
                'error' => $validation['error']
            );
        }

        // Check if update is available
        $has_update = version_compare($product->latest_version, $current_version, '>');

        $update_info = array(
            'has_update' => $has_update,
            'latest_version' => $product->latest_version,
            'current_version' => $current_version
        );

        if ($has_update) {
            $update_info['changelog'] = $product->changelog;
            $update_info['download_url'] = $this->get_download_url($product_slug, $license_key);
        }

        return $update_info;
    }

    /**
     * Get download URL for a product update
     *
     * @param string $product_slug
     * @param string $license_key
     * @return string
     */
    public function get_download_url($product_slug, $license_key) {
        return rest_url('licensing/v1/update-download') . 
            '?license_key=' . urlencode($license_key) . 
            '&product_slug=' . urlencode($product_slug);
    }

    /**
     * Generate COMPLETE integration code snippet for premium plugins
     *
     * @param string $product_slug
     * @return string
     */
    public function generate_integration_code($product_slug) {
        $base_url = home_url();
        $class_name = ucwords(str_replace('-', '_', $product_slug));
        
        $code = '<?php
/**
 * Complete License and Update Integration for ' . esc_html($product_slug) . '
 * Generated by WP Licensing Manager - COMPLETE VERSION
 * 
 * Add this code to your premium plugin to enable licensing and automatic updates.
 */

// Prevent direct access
if (!defined(\'ABSPATH\')) {
    exit;
}

class ' . $class_name . '_License_Manager {
    
    private $plugin_file;
    private $plugin_slug;
    private $version;
    private $license_server_url;
    private $license_key;
    
    public function __construct($plugin_file, $version) {
        $this->plugin_file = $plugin_file;
        $this->plugin_slug = \'' . esc_js($product_slug) . '\';
        $this->version = $version;
        $this->license_server_url = \'' . esc_url($base_url) . '\';
        $this->license_key = get_option($this->plugin_slug . \'_license_key\');
        
        add_action(\'admin_init\', array($this, \'init\'));
        add_action(\'admin_menu\', array($this, \'license_menu\'));
        add_filter(\'pre_set_site_transient_update_plugins\', array($this, \'check_for_update\'));
        add_filter(\'plugins_api\', array($this, \'plugins_api_filter\'), 10, 3);
        add_action(\'admin_notices\', array($this, \'license_notices\'));
    }
    
    public function init() {
        if (isset($_POST[\'activate_license\']) && wp_verify_nonce($_POST[\'license_nonce\'], \'license_nonce\')) {
            $this->activate_license();
        }
        
        if (isset($_POST[\'deactivate_license\']) && wp_verify_nonce($_POST[\'license_nonce\'], \'license_nonce\')) {
            $this->deactivate_license();
        }
        
        if (isset($_POST[\'check_license\']) && wp_verify_nonce($_POST[\'license_nonce\'], \'license_nonce\')) {
            $this->check_license_status();
        }
    }
    
    public function license_menu() {
        add_options_page(
            \'' . esc_html($product_slug) . ' License\',
            \'' . esc_html($product_slug) . ' License\',
            \'manage_options\',
            $this->plugin_slug . \'-license\',
            array($this, \'license_page\')
        );
    }
    
    public function license_page() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        $status = get_option($this->plugin_slug . \'_license_status\');
        $last_check = get_option($this->plugin_slug . \'_license_last_check\');
        
        ?>
        <div class="wrap">
            <h1>' . esc_html($product_slug) . ' License Settings</h1>
            
            <div class="card" style="max-width: 600px;">
                <h2>License Management</h2>
                
                <form method="post" action="">
                    <?php wp_nonce_field(\'license_nonce\', \'license_nonce\'); ?>
                    
                    <table class="form-table">
                        <tr>
                            <th scope="row">License Key</th>
                            <td>
                                <input type="text" name="license_key" value="<?php echo esc_attr($license_key); ?>" 
                                       class="regular-text" placeholder="Enter your license key" />
                                <p class="description">Enter the license key you received after purchase.</p>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">Status</th>
                            <td>
                                <?php if ($status == \'valid\'): ?>
                                    <span style="color: green; font-weight: bold;">✓ Active</span>
                                    <p class="description">Your license is active and updates are enabled.</p>
                                <?php elseif ($status == \'invalid\'): ?>
                                    <span style="color: red; font-weight: bold;">✗ Invalid</span>
                                    <p class="description">Please check your license key and try again.</p>
                                <?php elseif ($status == \'expired\'): ?>
                                    <span style="color: orange; font-weight: bold;">⚠ Expired</span>
                                    <p class="description">Your license has expired. Please renew to continue receiving updates.</p>
                                <?php else: ?>
                                    <span style="color: gray;">Not activated</span>
                                    <p class="description">Enter your license key and activate to enable updates.</p>
                                <?php endif; ?>
                                
                                <?php if ($last_check): ?>
                                    <p class="description">Last checked: <?php echo date(\'Y-m-d H:i:s\', $last_check); ?></p>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">Current Version</th>
                            <td><?php echo esc_html($this->version); ?></td>
                        </tr>
                    </table>
                    
                    <p class="submit">
                        <?php if ($status == \'valid\'): ?>
                            <input type="submit" name="deactivate_license" value="Deactivate License" class="button" />
                            <input type="submit" name="check_license" value="Check Status" class="button" />
                        <?php else: ?>
                            <input type="submit" name="activate_license" value="Activate License" class="button-primary" />
                        <?php endif; ?>
                    </p>
                </form>
            </div>
        </div>
        
        <style>
        .card { background: #fff; border: 1px solid #ccd0d4; padding: 20px; border-radius: 4px; }
        .card h2 { margin-top: 0; }
        </style>
        <?php
    }
    
    public function activate_license() {
        if (!isset($_POST[\'license_key\']) || empty($_POST[\'license_key\'])) {
            add_action(\'admin_notices\', function() {
                echo \'<div class="notice notice-error"><p>Please enter a license key.</p></div>\';
            });
            return;
        }
        
        $license_key = sanitize_text_field($_POST[\'license_key\']);
        $domain = parse_url(home_url(), PHP_URL_HOST);
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/activate\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'domain\' => $domain,
                \'product_slug\' => $this->plugin_slug
            ),
            \'timeout\' => 30,
            \'sslverify\' => true
        ));
        
        if (is_wp_error($response)) {
            update_option($this->plugin_slug . \'_license_status\', \'error\');
            add_action(\'admin_notices\', function() use ($response) {
                echo \'<div class="notice notice-error"><p>Connection Error: \' . esc_html($response->get_error_message()) . \'</p></div>\';
            });
            return;
        }
        
        $body = json_decode(wp_remote_retrieve_body($response), true);
        
        if (isset($body[\'success\']) && $body[\'success\']) {
            update_option($this->plugin_slug . \'_license_key\', $license_key);
            update_option($this->plugin_slug . \'_license_status\', \'valid\');
            update_option($this->plugin_slug . \'_license_last_check\', time());
            
            add_action(\'admin_notices\', function() {
                echo \'<div class="notice notice-success"><p>License activated successfully! Updates are now enabled.</p></div>\';
            });
        } else {
            update_option($this->plugin_slug . \'_license_status\', \'invalid\');
            $error_message = isset($body[\'error\']) ? $body[\'error\'] : \'Unknown error occurred\';
            
            add_action(\'admin_notices\', function() use ($error_message) {
                echo \'<div class="notice notice-error"><p>Activation Error: \' . esc_html($error_message) . \'</p></div>\';
            });
        }
    }
    
    public function deactivate_license() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        $domain = parse_url(home_url(), PHP_URL_HOST);
        
        if (empty($license_key)) {
            add_action(\'admin_notices\', function() {
                echo \'<div class="notice notice-error"><p>No license key found to deactivate.</p></div>\';
            });
            return;
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/deactivate\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'domain\' => $domain,
                \'product_slug\' => $this->plugin_slug
            ),
            \'timeout\' => 30,
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if (isset($body[\'success\']) && $body[\'success\']) {
                update_option($this->plugin_slug . \'_license_status\', \'inactive\');
                add_action(\'admin_notices\', function() {
                    echo \'<div class="notice notice-success"><p>License deactivated successfully.</p></div>\';
                });
            } else {
                add_action(\'admin_notices\', function() use ($body) {
                    $error = isset($body[\'error\']) ? $body[\'error\'] : \'Deactivation failed\';
                    echo \'<div class="notice notice-warning"><p>\' . esc_html($error) . \'</p></div>\';
                });
            }
        } else {
            update_option($this->plugin_slug . \'_license_status\', \'inactive\');
            add_action(\'admin_notices\', function() {
                echo \'<div class="notice notice-warning"><p>License deactivated locally (server unreachable).</p></div>\';
            });
        }
    }
    
    public function check_license_status() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            add_action(\'admin_notices\', function() {
                echo \'<div class="notice notice-error"><p>No license key found.</p></div>\';
            });
            return;
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/validate\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'product_slug\' => $this->plugin_slug
            ),
            \'timeout\' => 30,
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if (isset($body[\'success\']) && $body[\'success\']) {
                update_option($this->plugin_slug . \'_license_status\', \'valid\');
                update_option($this->plugin_slug . \'_license_last_check\', time());
                
                add_action(\'admin_notices\', function() {
                    echo \'<div class="notice notice-success"><p>License is valid and active!</p></div>\';
                });
            } else {
                update_option($this->plugin_slug . \'_license_status\', \'invalid\');
                $error = isset($body[\'error\']) ? $body[\'error\'] : \'License validation failed\';
                
                add_action(\'admin_notices\', function() use ($error) {
                    echo \'<div class="notice notice-error"><p>\' . esc_html($error) . \'</p></div>\';
                });
            }
        } else {
            add_action(\'admin_notices\', function() use ($response) {
                echo \'<div class="notice notice-error"><p>Connection Error: \' . esc_html($response->get_error_message()) . \'</p></div>\';
            });
        }
    }
    
    public function check_for_update($transient) {
        if (empty($transient->checked)) {
            return $transient;
        }
        
        $plugin_basename = plugin_basename($this->plugin_file);
        
        if (!isset($transient->checked[$plugin_basename])) {
            return $transient;
        }
        
        // Only check for updates if license is valid
        $status = get_option($this->plugin_slug . \'_license_status\');
        if ($status !== \'valid\') {
            return $transient;
        }
        
        $remote_version = $this->get_remote_version();
        
        if ($remote_version && version_compare($this->version, $remote_version, \'<\')) {
            $transient->response[$plugin_basename] = (object) array(
                \'slug\' => dirname($plugin_basename),
                \'new_version\' => $remote_version,
                \'url\' => \'\',
                \'package\' => $this->get_download_url()
            );
        }
        
        return $transient;
    }
    
    public function plugins_api_filter($res, $action, $args) {
        if ($action != \'plugin_information\') {
            return $res;
        }
        
        if ($args->slug != dirname(plugin_basename($this->plugin_file))) {
            return $res;
        }
        
        $remote_version = $this->get_remote_version();
        $changelog = $this->get_changelog();
        
        return (object) array(
            \'name\' => \'' . esc_js($product_slug) . '\',
            \'slug\' => dirname(plugin_basename($this->plugin_file)),
            \'version\' => $remote_version ?: $this->version,
            \'author\' => \'Your Company\',
            \'homepage\' => \'\',
            \'requires\' => \'5.0\',
            \'tested\' => \'6.4\',
            \'downloaded\' => 0,
            \'last_updated\' => date(\'Y-m-d\'),
            \'sections\' => array(
                \'description\' => \'Premium plugin with licensing and automatic updates.\',
                \'changelog\' => $changelog ?: \'No changelog available.\'
            ),
            \'download_link\' => $this->get_download_url()
        );
    }
    
    private function get_remote_version() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return false;
        }
        
        // Cache remote version check for 12 hours
        $cache_key = $this->plugin_slug . \'_remote_version\';
        $cached_version = get_transient($cache_key);
        
        if ($cached_version !== false) {
            return $cached_version;
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/update-check\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'product_slug\' => $this->plugin_slug,
                \'current_version\' => $this->version
            ),
            \'timeout\' => 30,
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if (isset($body[\'success\']) && $body[\'success\'] && isset($body[\'latest_version\'])) {
                $remote_version = $body[\'latest_version\'];
                set_transient($cache_key, $remote_version, 12 * HOUR_IN_SECONDS);
                return $remote_version;
            }
        }
        
        return false;
    }
    
    private function get_changelog() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return \'\';
        }
        
        $response = wp_remote_post($this->license_server_url . \'/wp-json/licensing/v1/update-check\', array(
            \'body\' => array(
                \'license_key\' => $license_key,
                \'product_slug\' => $this->plugin_slug,
                \'current_version\' => $this->version
            ),
            \'timeout\' => 30,
            \'sslverify\' => true
        ));
        
        if (!is_wp_error($response)) {
            $body = json_decode(wp_remote_retrieve_body($response), true);
            
            if (isset($body[\'success\']) && $body[\'success\'] && isset($body[\'changelog\'])) {
                return $body[\'changelog\'];
            }
        }
        
        return \'\';
    }
    
    private function get_download_url() {
        $license_key = get_option($this->plugin_slug . \'_license_key\');
        
        if (empty($license_key)) {
            return \'\';
        }
        
        return $this->license_server_url . \'/wp-json/licensing/v1/update-download?license_key=\' . 
               urlencode($license_key) . \'&product_slug=\' . urlencode($this->plugin_slug);
    }
    
    public function license_notices() {
        $status = get_option($this->plugin_slug . \'_license_status\');
        $current_screen = get_current_screen();
        
        // Only show on relevant admin pages
        if (!$current_screen || strpos($current_screen->id, str_replace(\'-\', \'\', $this->plugin_slug)) === false) {
            return;
        }
        
        if ($status !== \'valid\') {
            echo \'<div class="notice notice-warning is-dismissible">\';
            echo \'<p><strong>\' . esc_html($this->plugin_slug) . \':</strong> \';
            
            if ($status === \'expired\') {
                echo \'Your license has expired. <a href="\' . admin_url(\'options-general.php?page=\' . $this->plugin_slug . \'-license\') . \'">Renew your license</a> to continue receiving updates.\';
            } else {
                echo \'Please <a href="\' . admin_url(\'options-general.php?page=\' . $this->plugin_slug . \'-license\') . \'">activate your license</a> to enable automatic updates.\';
            }
            
            echo \'</p></div>\';
        }
    }
}

// Initialize the license manager
// IMPORTANT: Uncomment the line below and replace with your actual plugin file and version
// new ' . $class_name . '_License_Manager(__FILE__, \'1.0.0\');
';

        return $code;
    }
}